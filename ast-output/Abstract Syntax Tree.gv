digraph "Abstract Syntax Tree" {
	node [color="cyan:aquamarine" "font color"=black style=filled]
	bgcolor=aliceblue
	0 [label=Module]
	1 [label="FunctionDef: main"]
	2 [label=arguments]
	3 [label=args]
	4 [label=arg]
	5 [label=arg]
	6 [label=arg]
	7 [label=arg]
	8 [label=defaults]
	9 [label=body]
	10 [label=If]
	11 [label=CompareGtE]
	12 [label="NameLoad: high"]
	13 [label="NameLoad: low"]
	14 [label=body]
	15 [label=Assign]
	16 [label="NameStore: mid"]
	17 [label=BinOpFloorDiv]
	18 [label=BinOpAdd]
	19 [label="NameLoad: high"]
	20 [label="NameLoad: low"]
	21 [label="Constant: 2"]
	22 [label=If]
	23 [label=CompareEq]
	24 [label=SubscriptLoad]
	25 [label="NameLoad: arr"]
	26 [label=Index]
	27 [label="NameLoad: mid"]
	28 [label="NameLoad: x"]
	29 [label=body]
	30 [label=Return]
	31 [label="NameLoad: mid"]
	32 [label=orelse]
	33 [label=If]
	34 [label=CompareGt]
	35 [label=SubscriptLoad]
	36 [label="NameLoad: arr"]
	37 [label=Index]
	38 [label="NameLoad: mid"]
	39 [label="NameLoad: x"]
	40 [label=body]
	41 [label=Return]
	42 [label=Call]
	43 [label="NameLoad: main"]
	44 [label="NameLoad: arr"]
	45 [label="NameLoad: low"]
	46 [label=BinOpSub]
	47 [label="NameLoad: mid"]
	48 [label="Constant: 1"]
	49 [label="NameLoad: x"]
	50 [label=orelse]
	51 [label=Return]
	52 [label=Call]
	53 [label="NameLoad: main"]
	54 [label="NameLoad: arr"]
	55 [label=BinOpAdd]
	56 [label="NameLoad: mid"]
	57 [label="Constant: 1"]
	58 [label="NameLoad: high"]
	59 [label="NameLoad: x"]
	60 [label=orelse]
	61 [label=Return]
	62 [label=UnaryOpUSub]
	63 [label="Constant: 1"]
	64 [label=decorator_list]
	65 [label=Assign]
	66 [label="NameStore: arr"]
	67 [label=ListLoad]
	68 [label="Constant: 2"]
	69 [label="Constant: 3"]
	70 [label="Constant: 4"]
	71 [label="Constant: 10"]
	72 [label="Constant: 40"]
	73 [label=Assign]
	74 [label="NameStore: x"]
	75 [label="Constant: 10"]
	76 [label=Assign]
	77 [label="NameStore: result"]
	78 [label=Call]
	79 [label="NameLoad: main"]
	80 [label="NameLoad: arr"]
	81 [label="Constant: 0"]
	82 [label=BinOpSub]
	83 [label=Call]
	84 [label="NameLoad: len"]
	85 [label="NameLoad: arr"]
	86 [label="Constant: 1"]
	87 [label="NameLoad: x"]
	88 [label=If]
	89 [label=CompareNotEq]
	90 [label="NameLoad: result"]
	91 [label=UnaryOpUSub]
	92 [label="Constant: 1"]
	93 [label=body]
	94 [label=Expr]
	95 [label=Call]
	96 [label="NameLoad: print"]
	97 [label="Constant: Element is present at index"]
	98 [label=Call]
	99 [label="NameLoad: str"]
	100 [label="NameLoad: result"]
	101 [label=orelse]
	102 [label=Expr]
	103 [label=Call]
	104 [label="NameLoad: print"]
	105 [label="Constant: Element is not present in array"]
	0 -> 1
	0 -> 65
	0 -> 73
	0 -> 76
	0 -> 88
	1 -> 2
	1 -> 9
	1 -> 64
	2 -> 3
	2 -> 8
	3 -> 4
	3 -> 5
	3 -> 6
	3 -> 7
	9 -> 10
	10 -> 11
	10 -> 14
	10 -> 60
	11 -> 12
	11 -> 13
	14 -> 15
	14 -> 22
	15 -> 16
	15 -> 17
	17 -> 18
	17 -> 21
	18 -> 19
	18 -> 20
	22 -> 23
	22 -> 29
	22 -> 32
	23 -> 24
	23 -> 28
	24 -> 25
	24 -> 26
	26 -> 27
	29 -> 30
	30 -> 31
	32 -> 33
	33 -> 34
	33 -> 40
	33 -> 50
	34 -> 35
	34 -> 39
	35 -> 36
	35 -> 37
	37 -> 38
	40 -> 41
	41 -> 42
	42 -> 43
	42 -> 44
	42 -> 45
	42 -> 46
	42 -> 49
	46 -> 47
	46 -> 48
	50 -> 51
	51 -> 52
	52 -> 53
	52 -> 54
	52 -> 55
	52 -> 58
	52 -> 59
	55 -> 56
	55 -> 57
	60 -> 61
	61 -> 62
	62 -> 63
	65 -> 66
	65 -> 67
	67 -> 68
	67 -> 69
	67 -> 70
	67 -> 71
	67 -> 72
	73 -> 74
	73 -> 75
	76 -> 77
	76 -> 78
	78 -> 79
	78 -> 80
	78 -> 81
	78 -> 82
	78 -> 87
	82 -> 83
	82 -> 86
	83 -> 84
	83 -> 85
	88 -> 89
	88 -> 93
	88 -> 101
	89 -> 90
	89 -> 91
	91 -> 92
	93 -> 94
	94 -> 95
	95 -> 96
	95 -> 97
	95 -> 98
	98 -> 99
	98 -> 100
	101 -> 102
	102 -> 103
	103 -> 104
	103 -> 105
}
